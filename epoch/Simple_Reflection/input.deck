begin:control
  nx = 400
  ny = 400

  # Final time of simulation
  t_end = 110 * femto

  # Size of domain
  x_min = -20e-6
  x_max = -x_min
  y_min = -20e-6
  y_max = -y_min

  stdout_frequency = 10
end:control


begin:boundaries
  bc_x_min = simple_laser
  bc_x_max = open
  bc_y_min = periodic
  bc_y_max = periodic
end:boundaries


begin:constant
  lambda0 = 1.0 * micron
  theta = 0
  lambdaf = lambda0 * cos(theta)
  las_lambda = 1 * micron
  las_omega = 2.0 * pi * c / las_lambda
  las_time = 2.0 * pi / las_omega

  max_den =  1.98e27
  profile_x = if((x gt 0.0), 1.0, 0.0)
  profile_y = 1.0

  # These two set the beam focus
  w_0 = 5.0 * micron # Beam waist size
  x_spot = 1 * micron # Distance from x_min to spot
  fwhm = 3 * micron 
  w = fwhm / 1.3863


  # These are the parameters calculated for driving the laser
  # These should not need to be modified
  x_R = pi * w_0^2 / lambda0 # Rayleigh range
  RC = x_spot * (1.0 + (x_R/x_spot)^2) # Radius of curvature on x_min
  w_bnd = w_0 * sqrt( 1.0 + (x_spot/x_R)^2) # Spot size at x_min
  gouy = atan(x_spot/x_R) # Gouy phase shift at x_min
end:constant

begin:species
  name = Electron
  charge = -1.0
  mass = 1.0
  nparticles_per_cell = 2
  number_density = max_den*profile_x*profile_y
  temperature = 0.0
end:species

begin:species
  name = Proton
  charge = 1.0
  mass = 1836.2
  nparticles_per_cell = 2
  number_density = number_density(Electron)
end:species

begin:laser
  boundary = x_min
  intensity = 3.4e20
  lambda = lambda0
  # pol_angle = 0.0

  #phase = - 2.0 * pi* y* sin(theta)/ lambda0
  #t_profile = if ((time lt 2*las_time),sin^2(pi*time/(2*las_time)), 0)
  t_profile = if ((time lt 2*las_time),1, 0)
  profile = gauss(y,0,w_bnd)
  #profile = (1.0 + 0.05 * sin(32.0*pi*y/lengthy)) * gauss(y, 0, las_scale_y)
end:laser


begin:output
  name = normal

  # Simulated time between output dumps
  dt_snapshot = 10 * femto

  # px = always
  # py = always
  # pz = always
  # charge_density = always
  
  # Properties on grid
  grid = always
  ex = always
  ey = always
  ez = always
  # bx = always
  # by = always
  # bz = always
  number_density = always + species
end:output
